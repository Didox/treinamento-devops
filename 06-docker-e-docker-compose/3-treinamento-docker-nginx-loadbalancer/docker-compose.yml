version: '3.9'
services:
  sistema_concrete_nginx:
    container_name: sistema_concrete_nginx_container
    build:
      dockerfile: nginx/Dockerfile
      context: nginx/
    image: nginx_didox
    ports: 
      - "80:80"
    depends_on:
      - sistema_concrete_java1
      - sistema_concrete_java2
      - sistema_concrete_java3
    networks:
      - concrete-network
  sistema_concrete_java1:
    container_name: sistema_concrete_nginx_container_1
    image: didox/validador-cpf-java-turma-devops
    command: sh -c "echo 'bem vindo ao container 1'"
    networks:
      - concrete-network
  sistema_concrete_java2:
    container_name: sistema_concrete_nginx_container_2
    image: didox/validador-cpf-java-turma-devops
    command: sh -c "echo 'bem vindo ao container 2'"
    networks:
      - concrete-network
  sistema_concrete_java3:
    container_name: sistema_concrete_nginx_container_3
    image: didox/validador-cpf-java-turma-devops
    command: sh -c "echo 'bem vindo ao container 2'"
    networks:
      - concrete-network

networks: 
  concrete-network:
    driver: bridge
    
# $ docker-compose build
# $ docker-compose up
# $ docker-compose up --detach # modo background
# $ docker-compose stop
# $ docker-compose ps
# $ docker exec -it sistema_concrete_nginx_container bash
# $ docker-compose down
# Como descobrir o IP do container
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_1
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_2
# $ docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' sistema_concrete_nginx_container_3