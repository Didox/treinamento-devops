pipeline {
    agent any

    stages {
        stage('Git-clone') {
            steps {
                git url: "https://github.com/torneseumprogramador/spring-web-youtube.git", branch: "main"
            }
        }
        stage('Clean') {
            steps {
                sh "mvn clean"
            }
        }
        stage('Build') {
            steps {
                sh "mvn package -Dmaven.test.skip"
            }
        }
        stage('Test') {
            steps {
                sh "echo \"create database IF NOT EXISTS SpringWebYoutubeTest;\" > criar-db.sql"
                sh "mysql -uroot -p'Rtg52283bsnsagRFT6' -h 172.31.59.40 < criar-db.sql"
                sh "USER=\"root\" PASSWORD=\"Rtg52283bsnsagRFT6\" HOST=\"172.31.59.40\" DATABASE=\"SpringWebYoutubeTest\" mvn test"
            }
        }
        stage('Prepara-Dockerfile') {
            steps {
                sh "echo 'FROM openjdk:8-jdk-alpine' > Dockerfile"
                sh "echo 'COPY target/*.jar app.jar' >> Dockerfile"
                sh "echo 'ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]' >> Dockerfile"
            }
        }
        stage('Build-docker') {
            steps {
                sh "docker build -t java-web ."
            }
        }
        stage('Deploy-QA') {
            steps {
                sh "docker rm java-cpf-qa --force"
                sh "USER=\"root\" PASSWORD=\"Rtg52283bsnsagRFT6\" HOST=\"172.31.59.40\" DATABASE=\"SpringWebYoutubeQa\" docker run -d -e USER -e PASSWORD -e HOST -e DATABASE -p 8082:8080 --name java-cpf-qa java-web"
            }
        }
        stage('Deploy') {
            steps {
                sh "docker rm java-cpf-prod --force"
                sh "USER=\"root\" PASSWORD=\"Rtg52283bsnsagRFT6\" HOST=\"172.31.59.40\" DATABASE=\"SpringWebYoutube\" docker run -d -e USER -e PASSWORD -e HOST -e DATABASE -p 8081:8080 --name java-cpf-prod java-web"
            }
        }
    }
}
