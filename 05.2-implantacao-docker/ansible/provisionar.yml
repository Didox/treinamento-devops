- hosts:
  - java-api-docker
  become: yes
  handlers:
    - name: "restart nginx"
      service:
        name: nginx
        state: restarted
  tasks:
    - name: "Renomar maquina"
      shell: hostname "java-api-docker" && echo "java-api-docker" > /etc/hostname

    - name: "Roda: sudo apt update"
      apt:
        upgrade: yes
        update_cache: yes

    - name: "Instala pacotes"
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - nginx
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg-agent
        - software-properties-common
    
    - name: add docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add docker apt repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: install docker
      apt:
        update_cache: yes
        state: latest
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Adicionar no bashrc
      lineinfile: dest=~/.bashrc line='export USER=root' state=present
    - name: Adicionar no bashrc
      lineinfile: dest=~/.bashrc line='export PASSWORD={{ lookup('env', 'TF_VAR_senha') }}' state=present
    - name: Adicionar no bashrc
      lineinfile: dest=~/.bashrc line='export DATABASE_URL="mysql://{{ lookup('env', 'RDS') }}/db_mysql_desafio?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC"' state=present

    - name: Aplicar o bashrc
      shell: source ~/.bashrc
      args:
        executable: /bin/bash

     - name: Aplicar o bashrc
      shell: source ~/.bashrc

    - name: "baixar imagem docker"
      shell: docker pull didox/desafio_multiplasapis_java_empresas

    - name: "Criando container"
      ignore_errors: yes
      shell: docker run -d -e USER -e PASSWORD -e DATABASE_URL -p 8080:8080 --name desafio_multiplasapis_java_empresas didox/desafio_multiplasapis_java_empresas

    - name: "start container"
      ignore_errors: yes
      shell: docker start desafio_multiplasapis_java_empresas

    - name: "Trocando nginx para VPS"
      copy:
        src: "nginx/default"
        dest: "/etc/nginx/sites-available/default"
      notify:
        - "restart nginx"


# Rodando ansible
# ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ../../ssh/id_rsa